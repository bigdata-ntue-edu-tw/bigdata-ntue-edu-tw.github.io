class l{constructor(t,i={}){this.quill=t,this.handleDrop=this.handleDrop.bind(this),this.handlePaste=this.handlePaste.bind(this),this.quill.root.addEventListener("drop",this.handleDrop,!1),this.quill.root.addEventListener("paste",this.handlePaste,!1)}handleDrop(t){if(t.preventDefault(),t.dataTransfer&&t.dataTransfer.files&&t.dataTransfer.files.length){if(document.caretRangeFromPoint){const i=document.getSelection(),e=document.caretRangeFromPoint(t.clientX,t.clientY);i&&e&&i.setBaseAndExtent(e.startContainer,e.startOffset,e.startContainer,e.startOffset)}this.readFiles(t.dataTransfer.files,this.insert.bind(this))}}handlePaste(t){t.clipboardData&&t.clipboardData.items&&t.clipboardData.items.length&&this.readFiles(t.clipboardData.items,i=>{this.quill.getSelection()||setTimeout(()=>this.insert(i),0)})}insert(t){const i=(this.quill.getSelection()||{}).index||this.quill.getLength();this.quill.insertEmbed(i,"image",t,"user")}readFiles(t,i){[].forEach.call(t,e=>{if(!e.type.match(/^image\/(gif|jpe?g|a?png|svg|webp|bmp|vnd\.microsoft\.icon)/i))return;const s=new FileReader;s.onload=n=>{i(n.target.result)};const a=e.getAsFile?e.getAsFile():e;a instanceof Blob&&s.readAsDataURL(a)})}}export{l as I};
